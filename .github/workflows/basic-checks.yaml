name: 'Static Analysis + Test'
on:
  workflow_dispatch:
  push:
  pull_request:

env:
  GO_VERSION: "1.16.x"

jobs:

  Static-Analysis:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v2

      - name: Restore bootstrap cache
        id: bootstrap-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ${{ github.workspace }}/.tmp
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('Makefile') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: Bootstrap dependencies
        if: steps.bootstrap-cache.outputs.cache-hit != 'true'
        run: make ci-bootstrap

      - name: Run static analysis
        run: make static-analysis

  Tests:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v2

      - name: Restore bootstrap cache
        id: bootstrap-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ${{ github.workspace }}/.tmp
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('Makefile') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: Bootstrap dependencies
        if: steps.bootstrap-cache.outputs.cache-hit != 'true'
        run: make ci-bootstrap

      - name: Run unit tests
        run: make unit

      - name: Build key for tar cache
        run: make integration-fingerprint

      - name: Restore integration test cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/test/integration/test-fixtures/cache
          key: ${{ runner.os }}-integration-test-cache-${{ hashFiles('test/integration/test-fixtures/cache.fingerprint') }}

      - name: Run integration tests
        run: make integration

      - name: Restore base benchmark result
        uses: actions/cache@v2
        with:
          path: test/results/benchmark-main.txt
          # use base sha for PR or new commit hash for main push in benchmark result key
          key: ${{ runner.os }}-bench-${{ (github.event.pull_request.base.sha != github.event.after) && github.event.pull_request.base.sha || github.event.after }}

      - name: Run benchmark tests
        id: benchmark
        run: |
          REF_NAME=${GITHUB_REF##*/} make benchmark
          OUTPUT=$(make show-benchstat)
          OUTPUT="${OUTPUT//'%'/'%25'}"
          OUTPUT="${OUTPUT//$'\n'/'%0A'}"
          OUTPUT="${OUTPUT//$'\r'/'%0D'}"
          echo "::set-output name=result::$OUTPUT"

      - uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test/results/**/*

      - name: Update PR benchmark results comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: benchmark
          message: |
            ### Benchmark Test Results

            <details>
              <summary>Benchmark results from the latest changes vs base branch</summary>

            ```
            ${{ steps.benchmark.outputs.result }}
            ```

            </details>
